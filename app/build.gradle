plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'org.jetbrains.dokka'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

def apiKeyPropertiesFile = rootProject.file("apiKey.properties")
def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.htueko.thesilverscreen"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "TMDB_API_KEY", apiKeyProperties['TMDB_API_KEY'])
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        androidTest {
            assets.srcDirs = ["src/debug/assets"]
        }
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            // don't link to android sdk
            noAndroidSdkLink.set(false)
            // hide the deprecated
            skipDeprecated.set(true)
            // show private properties
            includeNonPublic.set(true)
            // Suppress all inherited members that were not overridden in a given class.
            suppressInheritedMembers.set(true)
        }
    }
    outputDirectory.set(file("documentation/html"))
}

tasks.dokkaGfm.configure {
    dokkaSourceSets {
        named("main") {
            // don't link to android sdk
            noAndroidSdkLink.set(false)
            // hide the deprecated
            skipDeprecated.set(true)
            // show private properties
            includeNonPublic.set(true)
            // Suppress all inherited members that were not overridden in a given class.
            suppressInheritedMembers.set(true)
        }
    }
    outputDirectory.set(file("documentation/gfm"))
}

dependencies {

    // Modules
    implementation project(":logging")

    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation "androidx.activity:activity-compose:$compose_activity_version"
    implementation "androidx.paging:paging-compose:$compose_paging"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$compose_viewmodel"
    implementation "androidx.navigation:navigation-compose:$compose_navigation"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose_version"

    // accompanylist
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodel_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Network & Serialization
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-client-mock:$ktor_version"
    implementation "ch.qos.logback:logback-classic:1.2.6"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$moshi_converter_version"
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    // network response interface
    // https://github.com/skydoves/Sandwich
    implementation "com.github.skydoves:sandwich:$sandwich_version"

    // coil for compose
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Local unit tests
    testImplementation "androidx.test:core:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0-native-mt'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation 'io.mockk:mockk:1.12.2'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.2.0-alpha01'
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation 'org.robolectric:robolectric:4.7.3'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation('com.squareup.okhttp3:mockwebserver:5.0.0-alpha.3')
    testImplementation "org.hamcrest:hamcrest:2.2"

    // Instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.40.5'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.40.5'
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0-native-mt'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation 'io.mockk:mockk-android:1.12.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'

}
