plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
    id "kotlin-parcelize"
    id "org.jetbrains.dokka"
}

apply from: "../buildscripts/versions.gradle"

def apiKeyPropertiesFile = rootProject.file("apiKey.properties")
def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.htueko.thesilverscreen"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "TMDB_API_KEY", apiKeyProperties['TMDB_API_KEY'])
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        def compose = rootProject.ext.versions.compose
        kotlinCompilerExtensionVersion compose
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        androidTest {
            assets.srcDirs = ["src/debug/assets"]
        }
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            // don't link to android sdk
            noAndroidSdkLink.set(false)
            // hide the deprecated
            skipDeprecated.set(true)
            // show private properties
            includeNonPublic.set(true)
            // Suppress all inherited members that were not overridden in a given class.
            suppressInheritedMembers.set(true)
        }
    }
    outputDirectory.set(file("documentation/html"))
}

dependencies {

    // Modules
    implementation project(":logging")

    implementation "androidx.core:core-ktx:$rootProject.ext.versions.ktxCore"
    implementation "androidx.appcompat:appcompat:$rootProject.ext.versions.appCompat"

    // Material Design
    implementation "com.google.android.material:material:$rootProject.ext.versions.material"

    // Compose
    implementation "androidx.compose.ui:ui:$rootProject.ext.versions.compose"
    implementation "androidx.compose.material:material:$rootProject.ext.versions.compose"
    implementation "androidx.compose.ui:ui-tooling-preview:$rootProject.ext.versions.compose"
    implementation "androidx.activity:activity-compose:$rootProject.ext.versions.activityCompose"

    // Jetpack dependencies
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.ext.versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$rootProject.ext.versions.viewModel"
    implementation "androidx.compose.material:material-icons-extended:$rootProject.ext.versions.compose"
    implementation "androidx.paging:paging-compose:$rootProject.ext.versions.paging"

    // Navigation
    implementation "androidx.navigation:navigation-compose:$rootProject.ext.versions.composeNavigation"
    implementation "androidx.hilt:hilt-navigation-compose:$rootProject.ext.versions.hiltNavigationCompose"

    // Accompanist
    implementation "com.google.accompanist:accompanist-flowlayout:$rootProject.ext.versions.accompanist"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.ext.versions.coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.versions.coroutine"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.ext.versions.hilt"
    //kapt "com.google.dagger:hilt-android-compiler:$rootProject.ext.versions.hilt"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodel_version"
    kapt "androidx.hilt:hilt-compiler:$rootProject.ext.versions.hiltCompiler"

    // Room
    implementation "androidx.room:room-runtime:$rootProject.ext.versions.room"
    kapt "androidx.room:room-compiler:$rootProject.ext.versions.room"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$rootProject.ext.versions.room"

    // Network & Serialization
//    implementation "io.ktor:ktor-client-core:$ktor_version"
//    implementation "io.ktor:ktor-client-android:$ktor_version"
//    implementation "io.ktor:ktor-client-serialization:$ktor_version"
//    implementation "io.ktor:ktor-client-logging:$ktor_version"
//    implementation "io.ktor:ktor-client-mock:$ktor_version"
//    implementation "ch.qos.logback:logback-classic:1.2.6"
//    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.ext.versions.moshiConverter"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.versions.okhttp"
    implementation "com.squareup.moshi:moshi-kotlin:$rootProject.ext.versions.moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$rootProject.ext.versions.moshi"

    // network response interface
    // https://github.com/skydoves/Sandwich
    implementation "com.github.skydoves:sandwich:$sandwich_version"

    // coil for compose
    implementation "io.coil-kt:coil-compose:$rootProject.ext.versions.coil"

    // Logging
    implementation "com.jakewharton.timber:timber:$rootProject.ext.versions.timber"

    // Local unit tests
    testImplementation "junit:junit:$rootProject.ext.versions.junit"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.ext.versions.coroutine"
    testImplementation "app.cash.turbine:turbine:$rootProject.ext.versions.turbine"
    testImplementation "com.google.truth:truth:$rootProject.ext.versions.truth"
    testImplementation "io.mockk:mockk:$rootProject.ext.versions.mockk"
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.ext.versions.mockWebServer"
//    testImplementation "org.hamcrest:hamcrest:2.2"
//    testImplementation "androidx.test:core:1.4.0"
//    testImplementation "io.ktor:ktor-client-mock:$ktor_version"
//    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
//    testImplementation 'org.robolectric:robolectric:4.7.3'
//    testImplementation "androidx.arch.core:core-testing:2.1.0"
//    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"

    // Instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$rootProject.ext.versions.hilt"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$rootProject.ext.versions.hilt"
    androidTestImplementation "junit:junit:$rootProject.ext.versions.junit"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.ext.versions.coroutine"
    androidTestImplementation "app.cash.turbine:turbine:$rootProject.ext.versions.turbine"
    androidTestImplementation "com.google.truth:truth:$rootProject.ext.versions.truth"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.versions.androidxTestJunit"
    androidTestImplementation "io.mockk:mockk-android:$rootProject.ext.versions.mockk"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.versions.androidxTestJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.versions.espresso"
    // Test rules and transitive dependencies:
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$rootProject.ext.versions.compose"
//    androidTestImplementation "androidx.test:core-ktx:1.4.0"
//    androidTestImplementation "androidx.test:runner:1.4.0"
//    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    debugImplementation "androidx.compose.ui:ui-tooling:$rootProject.ext.versions.compose"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$rootProject.ext.versions.compose"


}