// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "buildscripts/versions.gradle"

buildscript {
    ext.kotlin_version = '1.6.21'
    ext {
        // https://gradle.org/releases/
        agp = "7.1.3"
        // https://kotlinlang.org/docs/releases.html#release-details
        kotlin = "1.6.10"
        // https://github.com/google/dagger/releases
        hilt                 = "2.41"
        // https://github.com/JLLeitschuh/ktlint-gradle/releases
        ktlint = "10.2.0"
        // https://github.com/detekt/detekt/releases
        detekt = "1.19.0"
        // https://github.com/ben-manes/gradle-versions-plugin
        versionsPlugin = "0.29.0"
        // https://github.com/Kotlin/kotlinx-kover/releases
        kover = "0.4.1"
        // https://github.com/Kotlin/dokka/releases
        dokka = "1.5.30"

        sandwich_version = "1.2.3"
        ktor_version = '1.6.5'
        kotlinx_serialization_version = '1.5.31'

    }
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlint"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt"
        classpath "com.github.ben-manes:gradle-versions-plugin:$versionsPlugin"
        classpath "org.jetbrains.kotlinx:kover:$kover"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka"
    }
}

apply from: "buildscripts/versions.gradle"
apply from: "buildscripts/git-hooks.gradle"

subprojects {
    apply from: "../buildscripts/ktlint.gradle"
    apply from: "../buildscripts/detekt.gradle"
    apply from: "../buildscripts/versionsplugin.gradle"
    apply from: "../buildscripts/kover.gradle"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

afterEvaluate {
    tasks['clean'].dependsOn installGitHooks
}